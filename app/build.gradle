plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk BuildVersion.compile_sdk

    defaultConfig {
        applicationId "jesse.blog"
        minSdk BuildVersion.min_sdk
        targetSdk BuildVersion.target_sdk
        versionCode BuildVersion.version_code
        versionName BuildVersion.version_name
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_SERVER_URL', '"https://arcblockio.cn"'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_SERVER_URL', '"https://arcblockio.cn"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation Libs.coroutines_android
    implementation Libs.coroutines_core
    implementation Libs.appcompat
    implementation Libs.recyclerview
    implementation Libs.constraintlayout
    implementation Libs.material

    // architecture components
    implementation Libs.android_core_ktx
    implementation Libs.lifecycle_runtime_ktx
    implementation Libs.lifecycle_viewmodel_ktx
    implementation Libs.lifecycle_livedata_ktx
    implementation Libs.lifecycle_viewmodel_savedstate
    implementation Libs.room_runtime
    annotationProcessor Libs.room_compiler
    implementation Libs.room_ktx
    implementation Libs.room_paging
    implementation Libs.paging_runtime_ktx
    kapt Libs.room_compiler

    // retrofit
    implementation Libs.retrofit2
    implementation Libs.retrofit2_gson
    implementation Libs.retrofit2_mock
    implementation Libs.okhttp_logging

    // glide
    implementation Libs.glide
    annotationProcessor Libs.glide_compiler
}